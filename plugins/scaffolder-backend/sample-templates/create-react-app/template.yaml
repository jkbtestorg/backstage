apiVersion: backstage.io/v1beta2
kind: Template
metadata:
  name: create-react-app-template-v3
  title: Create React App Template
  description: Create a new CRA website project
  tags:
    - experimental
    - react
    - cra
spec:
  owner: web@example.com
  templater: cra
  type: website
  path: '.'
  parameters:
    - title: Add some input
      required:
        - component_id
        - description
      properties:
        component_id:
          title: Name
          type: string
          description: Unique name of the component
        description:
          title: Description
          type: string
          description: Help others understand what this website is for.
    - title: Some more additional info that was previously provided automatically
      required:
        - owner
        - repoUrl
      properties:
        owner:
          title: Owner
          type: string
          description: Owner of the component
          ui:field: OwnerPicker
          ui:options:
            allowedKinds:
              - Group
            - title: Choose a location
        repoUrl:
          title: Repository Location
          type: string
          ui:field: RepoUrlPicker
          ui:options:
            allowedHosts:
              - github.com
  steps:
  # this action will go use cookiecutter to template some files into the working directory
  - id: template # an ID for the templating step
    name: Create skeleton # A user friendly name for the action
    action: fetch:cookiecutter
    input:
      url: ./skeleton # this is the directory for your skeleton files.
      # If it's located next to the `template.yaml` then you can use a relative path,
      # otherwise you can use absolute URLs that point at the VCS: https://github.com/backstage/backstage/tree/master/some_folder_somewhere
      values:
        # for each value that you need to pass to cookiecutter, they should be listed here and set in this values object.
        # You can use the handlebars templating syntax to pull them from the input parameters listed in the same file
        name: '{{ parameters.name }}'
        owner: '{{ parameters.owner }}'
        destination: '{{ parseRepoUrl parameters.repoUrl }}'

      # this action is for publishing the working directory to the VCS
  - id: publish
    name: Publish
    action: publish:github
    input:
     allowedHosts: ['github.com']
     description: 'This is {{ parameters.name }}'
     repoUrl: '{{ parameters.repoUrl }}'

      # this action will then register the created component in Backstage
  - id: register
    name: Register
    action: catalog:register
    input:
     repoContentsUrl: '{{ steps.publish.output.repoContentsUrl }}'
     catalogInfoPath: '/catalog-info.yaml'
  schema:
    required: 
      - component_id
      - use_typescript
      - description
      - collaborators
    properties:
      component_id:
        title: Name
        type: string
        pattern: ^[a-z0-9]+(-[a-z0-9]+)*$
        description: Unique name of the component. Lowercase, URL-safe characters only.
      description:
        title: Description
        type: string
        description: Help others understand what this website is for.
      use_typescript:
        title:  Use TypeScript
        type: boolean
        description: Include TypeScript
        default: true
      use_github_actions:
        title:  Use Github Actions workflows to build this component
        type: boolean
        description: Use Github Actions
        default: true
      collaborators:
        title: Collaborators
        description: Provide users with permissions
        type: array
        ui:options:
          orderable: false
        items:
          type: object
          required:
          - username
          - access
          properties:
            access:
              type: string
              description: The type of access for the user
              default: pull
              enum:
              - push
              - pull
              - admin
              - maintain
              - triage
            username:
              type: string
              description: The username or group
